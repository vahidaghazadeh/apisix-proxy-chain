name: Test Proxy-Chain Plugin

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y perl make cpanminus luarocks lua5.1 liblua5.1-0-dev libtest-harness-perl build-essential libssl-dev git libpcre3-dev zlib1g-dev

      - name: Install Lua dependencies
        run: |
          sudo luarocks install luafilesystem
          sudo luarocks install lua-resty-http

      - name: Install Perl dependencies
        run: |
          sudo cpanm --notest Test::Nginx::Socket::Lua
          sudo cpanm --notest Test::Harness
          /usr/bin/prove --version || echo "Prove installation failed"

      - name: Setup APISIX environment
        run: |
          git clone https://github.com/apache/apisix.git
          cd apisix
          echo "Running make deps..."
          make deps || { echo "make deps failed, see above for details"; exit 1; }
          mkdir -p t/servroot/conf
          echo "Listing deps directory:"
          ls -la deps/
          OPENRESTY_PATH=$(find deps -maxdepth 2 -type d -name "openresty-*" | head -n 1)
          if [ -z "$OPENRESTY_PATH" ] || [ ! -f "$OPENRESTY_PATH/nginx/sbin/nginx" ]; then
            echo "Error: OpenResty not fully installed, attempting manual installation..."
            curl -L https://openresty.org/download/openresty-1.21.4.1.tar.gz -o openresty.tar.gz
            tar -xzf openresty.tar.gz -C deps/
            OPENRESTY_PATH="deps/openresty-1.21.4.1"
            cd $OPENRESTY_PATH
            echo "Configuring OpenResty..."
            ./configure --with-pcre-jit --with-ipv6 --with-http_ssl_module --with-http_v2_module || { echo "Configure failed"; exit 1; }
            echo "Building OpenResty..."
            make -j$(nproc) || { echo "Make failed"; exit 1; }
            cd ../..
          fi
          echo "Listing OpenResty directory:"
          ls -la $OPENRESTY_PATH
          ls -la $OPENRESTY_PATH/nginx/sbin/
          if [ ! -f "$OPENRESTY_PATH/nginx/sbin/nginx" ]; then
            echo "Error: nginx binary still not found in $OPENRESTY_PATH/nginx/sbin/"
            exit 1
          fi
          echo "OPENRESTY_PATH=${OPENRESTY_PATH}" >> $GITHUB_ENV
          cd ..

      - name: Copy plugin and test files
        run: |
          cp plugins/proxy-chain.lua apisix/apisix/plugins/
          mkdir -p apisix/t/plugin
          cp t/proxy-chain.t apisix/t/plugin/

      - name: Debug environment setup
        working-directory: apisix
        run: |
          pwd
          ls -la t/servroot/ t/servroot/conf/ || echo "servroot directories missing"
          echo "PATH is: $PATH"
          echo "OpenResty path: $OPENRESTY_PATH"
          ${OPENRESTY_PATH}/nginx/sbin/nginx -V 2>&1
          ${OPENRESTY_PATH}/nginx/sbin/nginx -t -p t/servroot/ -c t/servroot/conf/nginx.conf || echo "Nginx config test failed"
          /usr/bin/prove --version

      - name: Run tests
        working-directory: apisix
        env:
          PATH: "${OPENRESTY_PATH}/nginx/sbin:/usr/bin:${PATH}"
          TEST_NGINX_BINARY: "${OPENRESTY_PATH}/nginx/sbin/nginx"
        run: |
          nginx -V 2>&1
          prove -I. -v -r t/plugin/proxy-chain.t || true

      - name: Upload test artifacts (if failed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: apisix/t/plugin/*.t